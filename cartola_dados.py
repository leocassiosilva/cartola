# -*- coding: utf-8 -*-
"""cartola_dados.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qSplRCDePGM7HyxXdwwcepc0NmDC5gLN
"""

import requests
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

url = 'https://api.cartolafc.globo.com/atletas/mercado'
response = requests.get(url)
data = response.json()

data

atletas = pd.DataFrame(data['atletas'])
clubes = pd.DataFrame(data['clubes'])
posicoes = pd.DataFrame(data['posicoes'])
status = pd.DataFrame(data['status'])

atletas.columns

clubes = clubes.T.set_index('id').reset_index()
posicoes = posicoes.T.set_index('id').reset_index()
status = status.T.set_index('id').reset_index()

atletas[:2]

atletas = atletas[['atleta_id','clube_id', 'posicao_id',	'status_id','nome', 'slug', 'apelido', 'foto', 'preco_num', 'pontos_num', 'variacao_num', 'media_num', 'jogos_num']]

atletas = atletas.merge(clubes.rename(columns={'id_clube': 'nome_clube', 'nome': 'nome_clube', 'nome_fantasia': 'nome_fantasia_clube'}), left_on='clube_id', right_on='id')
atletas = atletas.merge(posicoes.rename(columns={'id': 'id_posicao', 'nome': 'nome_posicao', 'abreviacao': 'abreviacao_posicao'}), left_on='posicao_id', right_on='id_posicao')
atletas = atletas.merge(status.rename(columns={'id': 'id_status', 'nome': 'nome_status'}), left_on='status_id', right_on='id_status')

atletas = atletas[['nome', 'slug', 'apelido', 'foto', 'preco_num', 'pontos_num', 'variacao_num', 'media_num', 'jogos_num', 'nome_posicao', 'nome_clube', 'nome_status']]

atletas = atletas.dropna()

times = atletas.groupby('nome_clube').agg({'nome': 'count', 'preco_num': 'sum', 'pontos_num': 'sum'}).reset_index()
times = times.rename(columns={'nome': 'jogadores_num'})
times['preco_medio'] = times['preco_num'] / times['jogadores_num']
times = times.sort_values('pontos_num', ascending=False).reset_index(drop=True)
times['posicao'] = times.index + 1

preco_medio = atletas.groupby('nome_clube')['preco_num'].mean().reset_index()
print(preco_medio)

sns.barplot(x='nome_clube', y='preco_num', data=preco_medio)
plt.xticks(rotation=90)
plt.title('Preço médio dos times')
plt.show()

machucados = atletas[atletas['status_id'] == 5]
suspensos = atletas[atletas['status_id'] == 6]
livres = atletas[atletas['status_id'] == 7]

status_counts = atletas['status_id'].value_counts()
plt.bar(status_counts.index, status_counts.values)
plt.xticks([5, 6, 7], ['Machucados', 'Suspensos', 'Livres'])
plt.xlabel('Status')
plt.ylabel('Número de jogadores')
plt.show()